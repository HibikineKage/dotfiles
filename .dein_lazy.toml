[[plugins]]
repo = 'Shougo/neomru.vim'
on_path = '.*'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
on_i = 1

[[plugins]]
repo = 'pangloss/vim-javascript'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'mojako/ref-sources.vim'

[[plugins]]
repo = 'kana/vim-submode'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neocomplete'

[[plugins]]
repo = 'tomtom/tcomment_vim'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'thinca/vim-ref'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

[[plugins]]
repo = 'vim-scripts/AnsiEsc.vim'

[[plugins]]
repo = 'vim-scripts/taglist.vim'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'kassio/neoterm'
if = "has('nvim')"
hook_add = '''
nnoremap <silent> ,rc :TREPLSendFile<cr>
nnoremap <silent> ,rl :TREPLSendLine<cr>
vnoremap <silent> ,rl :TREPLSendSelection<cr>
nnoremap <silent> vt :Ttoggle<cr>
nnoremap <silent> vs :terminal<cr>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = 'context_filetype.vim'
if = "has('nvim')"

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
if executable('typescript-language-server')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'typescript-language-server',
        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'typescript-language-server --stdio']},
        \ 'root_uri':server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'tsconfig.json'))},
        \ 'whitelist': ['typescript'],
        \ })
endif
let g:lsp_log_verbose = 1
let g:lsp_log_file = expand('~/vim-lsp.log')
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
let g:asyncomplete_log_file = expand('~/asyncomplete.log')
let g:asyncomplete_auto_popup = 1
imap <c-space> <Plug>(asyncomplete_force_refresh)
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<cr>"
'''

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
merged = 0

[[plugins]]
repo = 'Shougo/unite.vim'

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['unite.vim']

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
on_i = 1

[[plugins]]
repo = 'neomake/neomake'

[[plugins]]
repo = 'benjie/neomake-local-eslint.vim'
depends = ['neomake']

[[plugins]]
repo = 'benjie/local-npm-bin.vim'
depends = ['neomake']
on_source = ['neomake']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = ['typescript', 'typescriptreact']

[[plugins]]
repo = 'deton/jasegment.vim'

[[plugins]]
repo = 'cespare/vim-toml'
